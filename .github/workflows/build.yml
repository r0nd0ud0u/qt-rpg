name: Qt C++ Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    workflow_dispatch:

# Env variables
env:
  BUILD_TYPE: Release
  GTEST_OUTPUT: xml:results\output.xml

jobs:
  # Build for windows and mac (without sonar scanner)
  build-win-mac:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Windows (build)"
            os: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
                
      - name: Install Qt
        uses: jurplel/install-qt-action@v4.1.1
        with:
            aqtversion: '==3.1.*'
            version: '6.6.1'
            host: 'windows'
            target: 'desktop'
            arch: 'win64_mingw'
            tools: 'tools_mingw90'
            modules: 'qtmultimedia'
      - name: Configure CMake
        shell: bash
        run: |
          export WORKSPACE_PATH=$(echo "${{runner.workspace}}" | sed 's/\\/\//g')
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "MinGW Makefiles"

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v3.1.0
      - name: Run build-wrapper
        run: |
          build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build . --config ${{ env.BUILD_TYPE }}
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
              sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
    